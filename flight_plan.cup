package chevalier_muller;

import model.StructModel;
import model.Struct;

parser code {:

	private StructModel currentStructModel = null;
    
    public void report_error(String message, Object info) {
        StringBuffer m = new StringBuffer("Error");
		m.append (info.toString());
        m.append(" : "+message);
        System.err.println(m.toString());
    }
   
    public void report_fatal_error(String message, Object info) {
        report_error(message, info);
        System.exit(1);
    }
    
    public StructModel createStructModel(String name) {
    	this.currentStructModel = StructModel.createStructModel(name);
    	return this.currentStructModel;
    }
    
    public StructModel getStructModel() {
    	return this.currentStructModel;
    }

:}

terminal VAR, PTR;
terminal NAME; //terminal VALUE, NAME;
terminal STRUCT, END_STRUCT;  
terminal TERM;
terminal EQUAL;
terminal POINT;
terminal NEW;
terminal DOUBLE_QUOTE;
terminal PRINT;
   
nonterminal structure_def, data_defs, data_def;
nonterminal structure, assignement;
nonterminal to_string;


data_defs		::=	
				|		data_defs data_def TERM
				;

data_def		::=		VAR NAME:val TERM			{: getStructModel().putValue((String) val); :}
				|		PTR NAME:pntr TERM			{: getStructModel().putPointer((String) pntr); :}
				;

structure_def	::= 	STRUCT NAME:structModelName data_defs END_STRUCT		{: System.out.println("STRUCT MODEL: " + (String) structModelName); createStructModel((String) structModelName); :};

structure		::= 	NAME:structName EQUAL NEW NAME:structModelName TERM 								{: Struct.createStruct((String) structName, (String) structModelName); :};

assignement		::=		NAME:structName POINT NAME:key EQUAL DOUBLE_QUOTE NAME:val DOUBLE_QUOTE TERM 		{: Struct.getStruct((String) structName).put((String) key, (String) val); :}
				|		NAME:structName POINT NAME:key EQUAL NAME:val TERM 									{: Struct.getStruct((String) structName).put((String) key, (String) val); :}
				;
				
to_string		::= 	PRINT NAME:n TERM		{: System.out.println(Struct.getStruct((String) n).toString()); :};